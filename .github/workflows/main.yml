name: CI Pipeline

on: [push]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov  # Adiciona cobertura de testes
      
      - name: Wait for PostgreSQL
        timeout-minutes: 2
        run: |
          for i in {1..10}; do
            if pg_isready -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -h localhost; then
              echo "PostgreSQL está pronto!"
              exit 0
            fi
            sleep 3
          done
          echo "PostgreSQL não iniciou a tempo"
          exit 1

      - name: Run tests with coverage
        env:
          DB_HOST: localhost
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          pytest backend/tests/ -v --cov=backend --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml